import { LoggerOptions, LoggerTransport, ConfiguredTransport, LogLevel } from "./logger.interface";
export declare class LoggerService {
    static DEFAULT_TIME_FORMAT: string;
    static DEFAULT_LEVEL: LogLevel;
    static DEFAULT_FILENAME: string;
    private static DEFAULT_FILE_OPTIONS;
    private static DEFAULT_CONSOLE_OPTIONS;
    private static DEFAULT_LOGGER_OPTIONS;
    private logger;
    private requestId;
    private context;
    constructor(level: string, loggers: ConfiguredTransport[]);
    static getLoggers(transportNames: LoggerTransport[], options?: LoggerOptions): ConfiguredTransport[];
    static console(options?: LoggerOptions): ConfiguredTransport;
    static rotate(options?: LoggerOptions): ConfiguredTransport;
    setRequestId(id: string): void;
    getRequestId(): string;
    setContext(ctx: string): void;
    log(msg: any, context?: string): void;
    debug(msg: any, context?: string): void;
    info(msg: any, context?: string): void;
    warn(msg: any, context?: string): void;
    error(msg: any, trace?: string, context?: string): void;
    private dataToString;
    private defaultFormatter;
    private colorizeLevel;
}
